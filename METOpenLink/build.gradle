buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.uphyca.gradle:gradle-android-aspectj-plugin:0.9.5'
    }
}

repositories {
    maven {
        url "https://repo.commonsware.com.s3.amazonaws.com"
    }
}

apply plugin: 'com.android.application'
apply plugin: 'android-aspectj'
apply plugin: 'android'

sourceCompatibility = 1.7

android {
    compileSdkVersion 19
    buildToolsVersion '21.0.0'

    lintOptions {
        abortOnError false
    }

    productFlavors {
        QA {
            buildConfigField "String", "MT_DISTRIBUTION_TYPE", "\"QA\""
            applicationId 'com.milwaukeetool.mymilwaukee_QA'
        }
        UAT {
            buildConfigField "String", "MT_DISTRIBUTION_TYPE", "\"UAT\""
            applicationId 'com.milwaukeetool.mymilwaukee_UAT'
        }
        PROD {
            buildConfigField "String", "MT_DISTRIBUTION_TYPE", "\"PROD\""
            applicationId 'com.milwaukeetool.mymilwaukee'
        }
        BETA {
            buildConfigField "String", "MT_DISTRIBUTION_TYPE", "\"BETA\""
            applicationId 'com.milwaukeetool.mymilwaukee_BETA'
        }
        DEV {
            buildConfigField "String", "MT_DISTRIBUTION_TYPE", "\"DEV\""
            applicationId 'com.milwaukeetool.mymilwaukee_DEV'
        }
    }

    defaultConfig {
        minSdkVersion 18
        targetSdkVersion 19
        versionCode 4
        versionName '0.1.10.3'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    signingConfigs {
        release {
            storeFile file("openlink.keystore")
            storePassword "op4nl4nk"
            keyAlias "met_openlink"
            keyPassword "op4nl4nk"
        }
    }

    buildTypes {
        debug {
            buildConfigField "String", "MT_DISTRIBUTION_TYPE", "\"DEV\""
        }
        release {
            runProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        qaBuild {
            buildConfigField "String", "MT_DISTRIBUTION_TYPE", "\"QA\""
            debuggable true
            signingConfig signingConfigs.release
        }
        monkeytalk.initWith(buildTypes.qaBuild)
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.1'
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
//    compile 'net.hockeyapp.android:HockeySDK:3.0.2'
    compile 'com.android.support:appcompat-v7:20.+'
    compile 'com.google.android.gms:play-services:6.1.+'

    // CommonsWare SackOfViewAdapter
    compile 'com.commonsware.cwac:sacklist:1.0.0'

    // Retrofit / OKHTTP / GSON
    compile 'com.google.code.gson:gson:2.2.4'
    compile 'com.squareup.retrofit:retrofit:1.7.1'
    compile 'com.hannesdorfmann.smoothprogressbar:library:1.0.0'

    // Green Robot EventBus
    compile 'de.greenrobot:eventbus:2.2.1'

//    compile 'org.roboguice:roboguice:2.0'

//    // Crouton Alert (Toast) messages
//    compile('de.keyboardsurfer.android.widget:crouton:1.8.5@aar') {
//        // exclusion is not neccessary, but generally a good idea.
//        exclude group: 'com.google.android', module: 'support-v4'
//    }

//    // Android Bootstrap
//    compile 'com.loopeer.android:bootstrap:2.0.2'
//
//    // Animations
//    compile 'com.nineoldandroids:library:2.4.0'
//    compile 'com.daimajia.easing:library:1.0.0@aar'
//    compile 'com.daimajia.androidanimations:library:1.1.2@aar'

//    // Styled dialogs
//    compile 'eu.inmite.android.lib:android-styled-dialogs:1.2.0'

    // Post office
    compile 'com.r0adkll:postoffice:1.1.4'

    // Android Iconify
    compile 'com.joanzapata.android:android-iconify:1.0.8'

    // Smooth progress bar
    compile 'com.hannesdorfmann.smoothprogressbar:library:1.0.0'

    monkeytalkCompile fileTree(dir: 'monkey-libs', include: ['*.jar'])
}
